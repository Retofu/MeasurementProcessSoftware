###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         29/Sep/2023  15:37:32
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode           =  thumb
#    Endian             =  little
#    Source file        =  F:\work\Lab1\startupF411RE.cpp
#    Command line       =
#        -f F:\work\Lab1\Debug\Obj\startupF411RE.o.rsp
#        (F:\work\Lab1\startupF411RE.cpp -lC F:\work\Lab1\Debug\List\ -lA
#        F:\work\Lab1\Debug\List\ -o F:\work\Lab1\Debug\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files\IAR Systems\Embedded
#        Workbench 9.1\arm\inc\c\DLib_Config_Normal.h" -I F:\work\Lab1\Common\
#        -I F:\work\Lab1\AHardware\Registers\STM32F411\FieldValues\ -I
#        F:\work\Lab1\AHardware\Registers\STM32F411\ -I
#        F:\work\Lab1\AHardware\Registers\ -I
#        F:\work\Lab1\AHardware\Registers\CortexM4\ -I
#        F:\work\Lab1\AHardware\Registers\CortexM4\FieldValues\ -On --c++
#        --no_exceptions --no_rtti) --dependencies=n
#        F:\work\Lab1\Debug\Obj\startupF411RE.o.d
#    Locale             =  C
#    List file          =  F:\work\Lab1\Debug\List\startupF411RE.lst
#    Object file        =  F:\work\Lab1\Debug\Obj\startupF411RE.o
#    Runtime model:        
#      __CPP_Exceptions =  Disabled
#      __CPP_Language   =  C++14
#      __CPP_Library    =  DLib
#      __CPP_Runtime    =  1
#      __SystemLibrary  =  DLib
#
###############################################################################

F:\work\Lab1\startupF411RE.cpp
      1          /******************************************************************************
      2           *  FILENAME: startupF411RE.cpp
      3           *  
      4           * DESCRIPTION: Файл с векторами прерывания для Cortex-M. для С++.
      5           * Поскольку почему-то в Cortex-M все обработчики должны по имени точно 
      6           *  совпадать с имена в таблице векторов, а название метода из С++ класса 
      7           * совпасть с такой таблицей со стандратными стартап файлами никак не может
      8           * то вот приходиться такой же писать на С++. 
      9           * Внимание!!!!!! Имена классов точно должны совпадать с именами у вас в проекте
     10           * Можно изменить и сократить количество классов, если есть желание, например
     11           *
     12           * Copyright (c) 2018 by South Ural State University
     13           * Author: Сергей Колодий
     14           ******************************************************************************/
     15          
     16          #pragma language = extended
     17          #pragma segment = "CSTACK"
     18          
     19          extern "C" void __iar_program_start( void );
     20          
     21          class DummyModule
     22          {
     23            public:
     24              static void handler();
     25          };
     26          
     27          using tIntFunct = void(*)();
     28          //cstat !MISRAC++2008-9-5-1
     29          using tIntVectItem = union {tIntFunct __fun; void * __ptr;};
     30          
     31          // The vector table is normally located at address 0.
     32          // When debugging in RAM, it can be located in RAM, aligned to at least 2^6.
     33          // If you need to define interrupt service routines,
     34          // make a copy of this file and include it in your project.
     35          // The name "__vector_table" has special meaning for C-SPY:
     36          // it is where the SP start value is found, and the NVIC vector
     37          // table register (VTOR) is initialized to this address if != 0.
     38          
     39          #pragma location = ".intvec"
     40          //cstat !MISRAC++2008-0-1-4_b !MISRAC++2008-9-5-1

   \                                 In section .intvec, align 4
     41          extern "C" const tIntVectItem __vector_table[] =
   \                     __vector_table:
   \        0x0   0x....'....        DC32 SFE(CSTACK), __iar_program_start, _ZN11DummyModule7handlerEv

   \              0x....'....  

   \              0x....'....
   \        0xC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x14   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0, 0x0

   \              0x....'....  

   \              0x0000'0000  

   \              0x0000'0000
   \       0x24   0x0000'0000        DC32 0x0, 0x0, _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x0000'0000  

   \              0x....'....  

   \              0x....'....
   \       0x34   0x0000'0000        DC32 0x0, _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....  

   \              0x....'....
   \       0x40   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x48   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x50   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x58   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x60   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x68   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x70   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x78   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x80   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0x88   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \       0x9C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xA4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xAC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xB4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xBC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xC4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xCC   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xD4   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0

   \              0x....'....  

   \              0x0000'0000
   \       0xE0   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \       0xE8   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \       0xFC   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, _ZN11DummyModule7handlerEv

   \              0x0000'0000  

   \              0x....'....
   \      0x108   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv, 0x0, 0x0

   \              0x....'....  

   \              0x0000'0000  

   \              0x0000'0000
   \      0x118   0x0000'0000        DC32 0x0, 0x0, _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x0000'0000  

   \              0x....'....  

   \              0x....'....
   \      0x128   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x130   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \      0x14C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x154   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x15C   0x....'....        DC32 _ZN11DummyModule7handlerEv, _ZN11DummyModule7handlerEv

   \              0x....'....
   \      0x164   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x0000'0000
   \      0x184   0x....'....        DC32 _ZN11DummyModule7handlerEv, 0x0, 0x0, _ZN11DummyModule7handlerEv

   \              0x0000'0000  

   \              0x0000'0000  

   \              0x....'....
   \      0x194   0x....'....        DC32 _ZN11DummyModule7handlerEv
     42          {
     43            { .__ptr = __sfe( "CSTACK" ) },
     44            __iar_program_start,
     45          
     46            DummyModule::handler,
     47            DummyModule::handler,
     48            DummyModule::handler,
     49            DummyModule::handler,
     50            DummyModule::handler,
     51            0,
     52            0,
     53            0,
     54            0,
     55            DummyModule::handler,
     56            DummyModule::handler,
     57            0,
     58            DummyModule::handler,
     59            DummyModule::handler,
     60            //External Interrupts
     61            DummyModule::handler,         //Window Watchdog
     62            DummyModule::handler,         //PVD through EXTI Line detect/EXTI16
     63            DummyModule::handler,         //Tamper and Time Stamp/EXTI21 
     64            DummyModule::handler,         //RTC Wakeup/EXTI22 
     65            DummyModule::handler,         //FLASH
     66            DummyModule::handler,         //RCC
     67            DummyModule::handler,         //EXTI Line 0
     68            DummyModule::handler,         //EXTI Line 1
     69            DummyModule::handler,         //EXTI Line 2
     70            DummyModule::handler,         //EXTI Line 3
     71            DummyModule::handler,         //EXTI Line 4
     72            DummyModule::handler,         //DMA1 Stream 0
     73            DummyModule::handler,         //DMA1 Stream 1
     74            DummyModule::handler,         //DMA1 Stream 2
     75            DummyModule::handler,         //DMA1 Stream 3
     76            DummyModule::handler,         //DMA1 Stream 4
     77            DummyModule::handler,         //DMA1 Stream 5
     78            DummyModule::handler,         //DMA1 Stream 6
     79            DummyModule::handler,         //ADC1
     80            0,                            //USB High Priority
     81            0,                            //USB Low  Priority
     82            0,                            //DAC
     83            0,                            //COMP through EXTI Line
     84            DummyModule::handler,         //EXTI Line 9..5
     85            DummyModule::handler,         //TIM9/TIM1 Break interrupt 
     86            DummyModule::handler,         //TIM10/TIM1 Update interrupt
     87            DummyModule::handler,         //TIM11/TIM1 Trigger/Commutation interrupts
     88            DummyModule::handler,		//TIM1 Capture Compare interrupt
     89            DummyModule::handler,         //TIM2  	
     90            DummyModule::handler,         //TIM3
     91            DummyModule::handler,         //TIM4
     92            DummyModule::handler,         //I2C1 Event
     93            DummyModule::handler,         //I2C1 Error
     94            DummyModule::handler,         //I2C2 Event
     95            DummyModule::handler,         //I2C2 Error
     96            DummyModule::handler,         //SPI1
     97            DummyModule::handler,         //SPI2
     98            DummyModule::handler,         //USART1
     99            DummyModule::handler,         //USART2
    100            0,
    101            DummyModule::handler,         //EXTI Line 15..10
    102            DummyModule::handler,         //EXTI Line 17 interrupt / RTC Alarms (A and B) through EXTI line interrupt
    103            DummyModule::handler,         //EXTI Line 18 interrupt / USB On-The-Go  FS Wakeup through EXTI line interrupt
    104            0,				//TIM6
    105            0,				//TIM7  f0
    106            0,
    107            0,
    108            DummyModule::handler,         //DMA1 Stream 7 global interrupt fc
    109            0,
    110            DummyModule::handler,	        //SDIO global interrupt
    111            DummyModule::handler,	        //TIM5 global interrupt
    112            DummyModule::handler,	        //SPI3 global interrupt
    113            0,			        // 110
    114            0,
    115            0,
    116            0,
    117            DummyModule::handler,		//DMA2 Stream0 global interrupt 120
    118            DummyModule::handler,		//DMA2 Stream1 global interrupt
    119            DummyModule::handler,		//DMA2 Stream2 global interrupt
    120            DummyModule::handler,		//DMA2 Stream3 global interrupt
    121            DummyModule::handler,		//DMA2 Stream4 global interrupt 130
    122            0,
    123            0,
    124            0,
    125            0,
    126            0,
    127            0,
    128            DummyModule::handler,		//USB On The Go FS global interrupt, 14C
    129            DummyModule::handler,		//DMA2 Stream5 global interrupt
    130            DummyModule::handler,		//DMA2 Stream6 global interrupt
    131            DummyModule::handler,		//DMA2 Stream7 global interrupt
    132            DummyModule::handler,				//USART6 15C
    133            DummyModule::handler,         //I2C3 Event
    134            DummyModule::handler,         //I2C3 Error 164
    135            0,
    136            0,
    137            0,
    138            0,
    139            0,
    140            0,
    141            0,
    142            DummyModule::handler,		//FPU 184
    143            0,
    144            0,
    145            DummyModule::handler,		//SPI 4 global interrupt
    146            DummyModule::handler		//SPI 5 global interrupt
    147          };
    148          

   \                                 In section .text, align 2, keep-with-next
    149          void DummyModule::handler()   { for(;;) {} } ;
   \                     _ZN11DummyModule7handlerEv: (+1)
   \                     ??handler_0: (+1)
   \        0x0   0xE7FE             B.N      ??handler_0
    150          
    151          extern "C" void __cmain( void );
    152          extern "C" __weak void __iar_init_core( void );
    153          extern "C" __weak void __iar_init_vfp( void );
    154          
    155          #pragma required=__vector_table

   \                                 In section .text, align 2, keep-with-next
    156          void __iar_program_start( void )
    157          {
   \                     __iar_program_start: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    158            __iar_init_core();
   \        0x2   0x.... 0x....      BL       __iar_init_core
    159            __iar_init_vfp();
   \        0x6   0x.... 0x....      BL       __iar_init_vfp
    160            __cmain();
   \        0xA   0x.... 0x....      BL       __cmain
    161          }
   \        0xE   0xBD01             POP      {R0,PC}
   \       0x10                      REQUIRE __vector_table
    162          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   DummyModule::handler()
       8   __iar_program_start
         8   -> __cmain
         8   -> __iar_init_core
         8   -> __iar_init_vfp


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  DummyModule::handler()
      16  __iar_program_start
     408  __vector_table

 
 408 bytes in section .intvec
  18 bytes in section .text
 
  18 bytes of CODE  memory
 408 bytes of CONST memory

Errors: none
Warnings: none
